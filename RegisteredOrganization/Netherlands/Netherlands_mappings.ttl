nhr:Adres
  mapping:mapsToConcept toop:PhysicalAddress ;
  rdfs:subClassOf toop:PhysicalAddress ;
.
nhr:Locatie
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:NatuurlijkPersoon
  rdfs:subClassOf toop:Person ;
.
nhr:Vestiging
  mapping:mapsToConcept org:Site ;
.
nhr:heeftBezoekadres
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:heeftPostadres
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:heeftRechtsvorm
  rdfs:subPropertyOf toop:hasCompanyType ;
.
nhr:heeftVolledigAdres
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object nhr:Vestiging ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "bezadres" ;
              ] ;
            sp:predicate nhr:heeftBezoekadres ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "address" ;
              ] ;
            sp:predicate nhr:heeftVolledigAdres ;
            sp:subject [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "countryname" ;
              ] ;
            sp:predicate nhr:land ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "region" ;
              ] ;
            sp:predicate nhr:regio ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "streetaddress" ;
              ] ;
            sp:predicate nhr:straatHuisnummer ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postcodewoonplaats" ;
              ] ;
            sp:predicate nhr:postcodeWoonplaats ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object toop:RegisteredSite ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:uri ;
                sp:arg1 [
                    rdf:type sp:concat ;
                    sp:arg1 "http://toop.nl/nationaalhandelsregister#" ;
                    sp:arg2 "Bezoekadres" ;
                    sp:arg3 [
                        rdf:type sp:replace ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "site" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://toop.eu/registered-organization#" ;
                        sp:arg3 "_" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "address" ;
              ] ;
            sp:predicate toop:hasPhysicalAddress ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "streetaddress" ;
              ] ;
            sp:predicate toop:streetAddress ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "countryname" ;
              ] ;
            sp:predicate toop:countryName ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "locality" ;
              ] ;
            sp:predicate toop:locality ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postalcode" ;
              ] ;
            sp:predicate toop:postalCode ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:concat ;
                sp:arg1 [
                    sp:varName "postalcode" ;
                  ] ;
                sp:arg2 " " ;
                sp:arg3 [
                    sp:varName "locality" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "postcodewoonplaats" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "region" ;
                    ] ;
                  sp:predicate toop:region ;
                  sp:subject [
                      sp:varName "address" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:huisnummer
  mapping:mapsToConcept toop:streetAddress ;
.
nhr:kvkNummer
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object nhr:MaatschappelijkeActiviteit ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ccvalue" ;
              ] ;
            sp:predicate nhr:kvkNummer ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object toop:RegisteredOrganization ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "cc" ;
              ] ;
            sp:predicate toop:hasCompanyCode ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ccvalue" ;
              ] ;
            sp:predicate skos:notation ;
            sp:subject [
                sp:varName "cc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "kvk" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "kvk" ;
              ] ;
            sp:predicate [
                sp:varName "relatie" ;
              ] ;
            sp:subject [
                sp:varName "bedrijf" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "relatie" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject nhr:kvkNummer ;
          ]
          [
            rdf:type sp:SubQuery ;
            sp:query [
                rdf:type sp:Select ;
                sp:resultVariables (
                    [
                      sp:varName "bedrijf" ;
                    ]
                  ) ;
                sp:where (
                    [
                      sp:object [
                          sp:varName "naam" ;
                        ] ;
                      sp:predicate [
                          sp:varName "naamrelatie" ;
                        ] ;
                      sp:subject [
                          sp:varName "bedrijf" ;
                        ] ;
                    ]
                    [
                      sp:object [
                          sp:varName "naamrelatie" ;
                        ] ;
                      sp:predicate mapping:mapsToConcept ;
                      sp:subject nhr:naamMaatschappelijkeActiviteit ;
                    ]
                    [
                      rdf:type sp:Filter ;
                      sp:expression [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "naam" ;
                            ] ;
                          sp:arg2 "Danmarks Tekniske Universitet" ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "kvk" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "kvk" ;
              ] ;
            sp:predicate [
                sp:varName "relatie" ;
              ] ;
            sp:subject [
                sp:varName "bedrijf" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "relatie" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject nhr:kvkNummer ;
          ]
          [
            sp:object owl:DatatypeProperty ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "relatie" ;
              ] ;
          ]
        ) ;
    ] ;
  mapping:mapsToConcept toop:CompanyCode ;
  mapping:mapsToConcept toop:hasCompanyCode ;
  mapping:mapsToConcept skos:notation ;
.
nhr:land
  mapping:mapsToConcept toop:countryName ;
  rdfs:subPropertyOf toop:countryName ;
.
nhr:naamMaatschappelijkeActiviteit
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "bedrijf" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "naam" ;
              ] ;
            sp:predicate [
                sp:varName "naamrelatie" ;
              ] ;
            sp:subject [
                sp:varName "bedrijf" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "naamrelatie" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject nhr:naamMaatschappelijkeActiviteit ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:regex ;
                sp:arg1 [
                    sp:varName "naam" ;
                  ] ;
                sp:arg2 "Danmarks Tekniske Universitet" ;
              ] ;
          ]
        ) ;
    ] ;
  mapping:mapsToConcept toop:companyName ;
  rdfs:subPropertyOf toop:companyName ;
.
nhr:plaats
  mapping:mapsToConcept toop:locality ;
  rdfs:subPropertyOf toop:locality ;
.
nhr:postcode
  mapping:mapsToConcept toop:postalCode ;
  rdfs:subPropertyOf toop:postalCode ;
.
nhr:postcodeWoonplaats
  mapping:mapsToConcept toop:locality ;
  mapping:mapsToConcept toop:postalCode ;
.
nhr:regio
  mapping:mapsToConcept toop:region ;
  rdfs:subPropertyOf toop:region ;
.
nhr:straatHuisnummer
  mapping:mapsToConcept toop:streetAddress ;
  rdfs:subPropertyOf toop:streetAddress ;
.
nhr:straatnaam
  mapping:mapsToConcept toop:streetAddress ;
.
nhr:wordtGeleidVanuit
  rdfs:subPropertyOf toop:hasRegisteredSite ;
.