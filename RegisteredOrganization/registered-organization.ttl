# baseURI: http://toop.eu/registered-organization
# imports: http://dublincore.org/2012/06/14/dcterms.rdf
# imports: http://example.register.elo/elonia-business-register
# imports: http://example.register.fre/freedonia-business-register
# imports: http://example.register.nl/nationaalhandelsregister
# imports: http://spinrdf.org/spin
# imports: http://toop.eu/mapping
# imports: http://www.w3.org/2004/02/skos/core
# imports: http://www.w3.org/2006/vcard/ns
# imports: http://www.w3.org/ns/org.ttl
# imports: http://www.w3.org/ns/prov-o
# imports: http://xmlns.com/foaf/0.1/
# imports: https://www.w3.org/2009/08/skos-reference/skos.rdf
# imports: https://www.w3.org/ns/adms.rdf
# imports: https://www.w3.org/ns/org.rdf
# imports: https://www.w3.org/ns/regorg.rdf
# prefix: toop

@prefix adms: <http://www.w3.org/ns/adms#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix mapping: <http://toop.eu/mapping#> .
@prefix nhr: <http://example.register.nl/nationaalhandelsregister#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rov: <http://www.w3.org/ns/regorg#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix toop: <http://toop.eu/registered-organization#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://example.register.elo/elonia-business-register#EloniaActivityDeclaration>
  rdfs:subPropertyOf toop:activityDescription ;
.
<http://example.register.elo/elonia-business-register#EloniaAddress>
  rdfs:subClassOf toop:PhysicalAddress ;
.
<http://example.register.elo/elonia-business-register#EloniaBusinessCode>
  rdfs:subClassOf toop:CompanyCode ;
.
<http://example.register.elo/elonia-business-register#EloniaCompanyName>
  rdfs:subPropertyOf toop:companyName ;
.
<http://example.register.elo/elonia-business-register#EloniaCompanyType>
  rdfs:subPropertyOf toop:hasCompanyType ;
.
<http://example.register.elo/elonia-business-register#EloniaLegalStatus>
  rdfs:subPropertyOf toop:hasLegalStatus ;
.
<http://example.register.elo/elonia-business-register#EloniaLegalStatusEffectiveDate>
  rdfs:subPropertyOf toop:legalStatusEffectiveDate ;
.
<http://example.register.elo/elonia-business-register#EloniaRegistrationAuthority>
  rdfs:subPropertyOf toop:hasRegistrationAuthority ;
.
<http://example.register.elo/elonia-business-register#EloniaRegistrationDate>
  rdfs:subPropertyOf toop:registrationDate ;
.
<http://example.register.elo/elonia-business-register#EloniaSSNumber>
  rdfs:subClassOf toop:SSNumber ;
.
<http://example.register.elo/elonia-business-register#EloniaVATNumber>
  rdfs:subClassOf toop:VATNumber ;
.
<http://example.register.elo/elonia-business-register#hasBusinessCode>
  rdfs:subPropertyOf toop:hasCompanyCode ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaActivityDeclaration>
  rdfs:subPropertyOf toop:activityDescription ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaAddress>
  rdfs:subClassOf toop:PhysicalAddress ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaBusinessCode>
  mapping:mapsToConcept toop:CompanyCode ;
  mapping:mapsToValue skos:notation ;
  rdfs:subClassOf toop:CompanyCode ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty skos:notation ;
    ] ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaBusinessCode_1>
  skos:notation "123456" ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaCompanyName>
  rdfs:subPropertyOf toop:companyName ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaCompanyType>
  rdfs:subPropertyOf toop:hasCompanyType ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaLegalStatus>
  rdfs:subPropertyOf toop:hasLegalStatus ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaLegalStatusEffectiveDate>
  rdfs:subPropertyOf toop:legalStatusEffectiveDate ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaRegistrationAuthority>
  rdfs:subPropertyOf toop:hasRegistrationAuthority ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaRegistrationDate>
  rdfs:subPropertyOf toop:registrationDate ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaSSNumber>
  rdfs:subClassOf toop:SSNumber ;
.
<http://example.register.fre/freedonia-business-register#FreedoniaVATNumber>
  rdfs:subClassOf toop:VATNumber ;
.
<http://example.register.fre/freedonia-business-register#hasBusinessCode>
  rdfs:subPropertyOf toop:hasCompanyCode ;
.
nhr:Adres
  mapping:mapsToConcept toop:PhysicalAddress ;
  rdfs:subClassOf toop:PhysicalAddress ;
.
nhr:Locatie
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:NatuurlijkPersoon
  rdfs:subClassOf toop:Person ;
.
nhr:Vestiging
  mapping:mapsToConcept org:Site ;
.
nhr:heeftBezoekadres
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:heeftPostadres
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:heeftRechtsvorm
  rdfs:subPropertyOf toop:hasCompanyType ;
.
nhr:heeftVolledigAdres
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object nhr:Vestiging ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "bezadres" ;
              ] ;
            sp:predicate nhr:heeftBezoekadres ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "address" ;
              ] ;
            sp:predicate nhr:heeftVolledigAdres ;
            sp:subject [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "countryname" ;
              ] ;
            sp:predicate nhr:land ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "region" ;
              ] ;
            sp:predicate nhr:regio ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "streetaddress" ;
              ] ;
            sp:predicate nhr:straatHuisnummer ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postcodewoonplaats" ;
              ] ;
            sp:predicate nhr:postcodeWoonplaats ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object toop:RegisteredSite ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:uri ;
                sp:arg1 [
                    rdf:type sp:concat ;
                    sp:arg1 "http://example.register.nl/nationaalhandelsregister#" ;
                    sp:arg2 "Bezoekadres" ;
                    sp:arg3 [
                        rdf:type sp:replace ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "site" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://toop.eu/registered-organization#" ;
                        sp:arg3 "_" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "address" ;
              ] ;
            sp:predicate toop:hasPhysicalAddress ;
            sp:subject [
                sp:varName "site" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "streetaddress" ;
              ] ;
            sp:predicate toop:streetAddress ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "countryname" ;
              ] ;
            sp:predicate toop:countryName ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "locality" ;
              ] ;
            sp:predicate toop:locality ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postalcode" ;
              ] ;
            sp:predicate toop:postalCode ;
            sp:subject [
                sp:varName "address" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:concat ;
                sp:arg1 [
                    sp:varName "postalcode" ;
                  ] ;
                sp:arg2 " " ;
                sp:arg3 [
                    sp:varName "locality" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "postcodewoonplaats" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "region" ;
                    ] ;
                  sp:predicate toop:region ;
                  sp:subject [
                      sp:varName "address" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  mapping:mapsToConcept toop:hasPhysicalAddress ;
.
nhr:huisnummer
  mapping:mapsToConcept toop:streetAddress ;
.
nhr:kvkNummer
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object nhr:MaatschappelijkeActiviteit ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ccvalue" ;
              ] ;
            sp:predicate nhr:kvkNummer ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object toop:RegisteredOrganization ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "cc" ;
              ] ;
            sp:predicate toop:hasCompanyCode ;
            sp:subject [
                sp:varName "ro" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ccvalue" ;
              ] ;
            sp:predicate skos:notation ;
            sp:subject [
                sp:varName "cc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "kvk" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "kvk" ;
              ] ;
            sp:predicate [
                sp:varName "relatie" ;
              ] ;
            sp:subject [
                sp:varName "bedrijf" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "relatie" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject nhr:kvkNummer ;
          ]
          [
            rdf:type sp:SubQuery ;
            sp:query [
                rdf:type sp:Select ;
                sp:resultVariables (
                    [
                      sp:varName "bedrijf" ;
                    ]
                  ) ;
                sp:where (
                    [
                      sp:object [
                          sp:varName "naam" ;
                        ] ;
                      sp:predicate [
                          sp:varName "naamrelatie" ;
                        ] ;
                      sp:subject [
                          sp:varName "bedrijf" ;
                        ] ;
                    ]
                    [
                      sp:object [
                          sp:varName "naamrelatie" ;
                        ] ;
                      sp:predicate mapping:mapsToConcept ;
                      sp:subject nhr:naamMaatschappelijkeActiviteit ;
                    ]
                    [
                      rdf:type sp:Filter ;
                      sp:expression [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "naam" ;
                            ] ;
                          sp:arg2 "Danmarks Tekniske Universitet" ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "kvk" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "kvk" ;
              ] ;
            sp:predicate [
                sp:varName "relatie" ;
              ] ;
            sp:subject [
                sp:varName "bedrijf" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "relatie" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject nhr:kvkNummer ;
          ]
          [
            sp:object owl:DatatypeProperty ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "relatie" ;
              ] ;
          ]
        ) ;
    ] ;
  mapping:mapsToConcept toop:CompanyCode ;
  mapping:mapsToConcept toop:hasCompanyCode ;
  mapping:mapsToConcept skos:notation ;
.
nhr:land
  mapping:mapsToConcept toop:countryName ;
  rdfs:subPropertyOf toop:countryName ;
.
nhr:naamMaatschappelijkeActiviteit
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "bedrijf" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "naam" ;
              ] ;
            sp:predicate [
                sp:varName "naamrelatie" ;
              ] ;
            sp:subject [
                sp:varName "bedrijf" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "naamrelatie" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject nhr:naamMaatschappelijkeActiviteit ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:regex ;
                sp:arg1 [
                    sp:varName "naam" ;
                  ] ;
                sp:arg2 "Danmarks Tekniske Universitet" ;
              ] ;
          ]
        ) ;
    ] ;
  mapping:mapsToConcept toop:companyName ;
  rdfs:subPropertyOf toop:companyName ;
.
nhr:plaats
  mapping:mapsToConcept toop:locality ;
  rdfs:subPropertyOf toop:locality ;
.
nhr:postcode
  mapping:mapsToConcept toop:postalCode ;
  rdfs:subPropertyOf toop:postalCode ;
.
nhr:postcodeWoonplaats
  mapping:mapsToConcept toop:locality ;
  mapping:mapsToConcept toop:postalCode ;
.
nhr:regio
  mapping:mapsToConcept toop:region ;
  rdfs:subPropertyOf toop:region ;
.
nhr:straatHuisnummer
  mapping:mapsToConcept toop:streetAddress ;
  rdfs:subPropertyOf toop:streetAddress ;
.
nhr:straatnaam
  mapping:mapsToConcept toop:streetAddress ;
.
nhr:wordtGeleidVanuit
  rdfs:subPropertyOf toop:hasRegisteredSite ;
.
mapping:mapsToConcept
  spin:query [
      rdf:type sp:Select ;
      sp:where (
          [
            sp:object [
                sp:varName "ietsanders" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject [
                sp:varName "iets" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:where (
          [
            sp:object [
                sp:varName "toopconcept" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject [
                sp:varName "kvk" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:strstarts ;
                sp:arg1 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "kvk" ;
                      ] ;
                  ] ;
                sp:arg2 "http://example.register.nl/nationaalhandelsregister#" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "toopconcept" ;
              ] ;
            sp:predicate mapping:mapsToConcept ;
            sp:subject [
                sp:varName "freedonia" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:strstarts ;
                sp:arg1 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "freedonia" ;
                      ] ;
                  ] ;
                sp:arg2 "http://example.register.fre/freedonia-business-register#" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "valueterm" ;
              ] ;
            sp:predicate mapping:mapsToValue ;
            sp:subject [
                sp:varName "freedonia" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "freedonia" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "instance" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value" ;
              ] ;
            sp:predicate [
                sp:varName "valueterm" ;
              ] ;
            sp:subject [
                sp:varName "instance" ;
              ] ;
          ]
        ) ;
    ] ;
.
<http://toop.eu/registered-organization>
  rdf:type owl:Ontology ;
  spin:imports <http://topbraid.org/spin/owlrl-all> ;
  spin:imports <http://topbraid.org/spin/rdfsplus> ;
  spin:imports <http://topbraid.org/spin/skosspin> ;
  spin:imports <http://topbraid.org/spin/spinowl> ;
  owl:imports <http://dublincore.org/2012/06/14/dcterms.rdf> ;
  owl:imports <http://example.register.elo/elonia-business-register> ;
  owl:imports <http://example.register.fre/freedonia-business-register> ;
  owl:imports <http://example.register.nl/nationaalhandelsregister> ;
  owl:imports <http://spinrdf.org/spin> ;
  owl:imports <http://toop.eu/mapping> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  owl:imports <http://www.w3.org/2006/vcard/ns> ;
  owl:imports <http://www.w3.org/ns/org.ttl> ;
  owl:imports <http://www.w3.org/ns/prov-o> ;
  owl:imports <http://xmlns.com/foaf/0.1/> ;
  owl:imports <https://www.w3.org/2009/08/skos-reference/skos.rdf> ;
  owl:imports <https://www.w3.org/ns/adms.rdf> ;
  owl:imports <https://www.w3.org/ns/org.rdf> ;
  owl:imports <https://www.w3.org/ns/regorg.rdf> ;
  owl:versionIRI <http://ec.toop.org/ns/2017/12/organization> ;
  owl:versionInfo "$Date: 2017/12/27 16:31:41$" ;
.
toop:Address_DanmarksTekniskeUniversitet
  rdf:type toop:PhysicalAddress ;
  toop:countryName "Danmark" ;
  toop:locality "Kongens Lyngby" ;
  toop:postalCode "2800" ;
  toop:streetAddress "Anker Engelunds Vej 1 Bygning 101A" ;
.
toop:Address_card1
  rdf:type vcard:Address ;
  rdfs:comment "" ;
  rdfs:label "Address card1_"@nl ;
  skos:prefLabel "Address card1" ;
.
toop:CapitalTypeScheme
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "Represents the type of capital invested in the organzation, expressed in a consistent manner in a SKOS Concept Scheme."@en ;
  rdfs:label "capital type scheme"@en ;
  rdfs:subClassOf skos:ConceptScheme ;
.
toop:CompanyCode
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "The unique official company identifier_ "@en ;
  rdfs:label "Company code_"@en ;
  rdfs:subClassOf adms:Identifier ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty skos:notation ;
    ] ;
  skos:prefLabel "Company code" ;
.
toop:CompanyCode_1
  rdf:type toop:CompanyCode ;
  skos:notation "2345135" ;
.
toop:CompanyCode_DanmarksTekniskeUniversitet
  rdf:type toop:CompanyCode ;
  rdfs:comment "The company code of the Technical University of Denmark."@en ;
  rdfs:label "Company code Danmarks tekniske universitet" ;
  skos:notation "30060946" ;
  skos:prefLabel "Company code Danmarks tekniske universitet" ;
.
toop:CompanyTypeScheme
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "Represents the member states' recognized company types, expressed in a consistent manner in a SKOS Concept Scheme."@en ;
  rdfs:label "CompanyTypeScheme"@en ;
  rdfs:subClassOf skos:ConceptScheme ;
  skos:prefLabel "CompanyTypeScheme" ;
.
toop:ContactNumber
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "The main contact numbers of the company."@en ;
  rdfs:label "Contact number"@en ;
  rdfs:subClassOf vcard:Tel ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty toop:contactNumberValue ;
    ] ;
.
toop:ContactNumber_1
  rdf:type toop:ContactNumber ;
.
toop:DanmarksTekniskeUniversitet
  rdf:type toop:RegisteredOrganization ;
  toop:companyName "Danmarks Tekniske Universitet" ;
  toop:hasCompanyCode toop:CompanyCode_DanmarksTekniskeUniversitet ;
  toop:hasRegisteredSite toop:MainSite_DanmarksTekniskeUniversitet ;
  rdfs:comment "Technical University of Denmark"@en ;
  rdfs:label "Danmarks tekniske universitet"@dk ;
  skos:prefLabel "Danmarks tekniske universitet"@dk ;
.
toop:EmailAddress
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "The email-address of the registered site of the company."@en ;
  rdfs:label "Email address"@en ;
  rdfs:subClassOf vcard:Email ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty toop:emailAddressValue ;
    ] ;
.
toop:LegalStatusScheme
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "Represents the member states' recognized legal statuses for companies, expressed in a consistent manner in a SKOS Concept Scheme."@en ;
  rdfs:label "LegalStatusScheme"@en ;
  rdfs:subClassOf skos:ConceptScheme ;
  skos:prefLabel "LegalStatusScheme" ;
.
toop:MainSite_DanmarksTekniskeUniversitet
  rdf:type toop:RegisteredSite ;
  toop:hasPhysicalAddress toop:Address_DanmarksTekniskeUniversitet ;
  rdfs:comment "The main site of the Technical University of Denmark."@en ;
  rdfs:label "Main site Danmarks tekniske universitet" ;
  skos:prefLabel "Main site Danmarks tekniske universitet" ;
.
toop:MyAddress
  rdf:type toop:PhysicalAddress ;
  toop:countryName "Nederland" ;
  toop:locality "Soesterberg" ;
  toop:postalCode "1234AB" ;
  toop:region "Utrecht" ;
  toop:streetAddress "Kampweg 55" ;
.
toop:MyCompCode-Id123456
  rdf:type adms:Identifier ;
  toop:hasRegistrationAuthority toop:NL-KvK ;
  toop:legalStatusEffectiveDate "2017-10-23"^^xsd:date ;
  rdfs:comment "My company code, as instance of toop:CompanyCode class, representing the unique official company identifier as laid down by the registration authority_"@en ;
  rdfs:label "MyCompCode-Id123456_"@en ;
  adms:schemeAgency "NL-KvK Kamer van Koophandel"@nl ;
.
toop:MyMainSite
  rdf:type toop:RegisteredSite ;
  toop:hasPhysicalAddress toop:MyAddress ;
  rdfs:comment "" ;
  rdfs:label "MyMainSite"@nl ;
  skos:prefLabel "MyMainSite" ;
.
toop:MyOrganization_0
  rdf:type vcard:Organization ;
  rdfs:comment "The vCard describing the main site of the company or legal person."@en ;
  rdfs:label "Mijn Organization_0"@nl ;
  skos:prefLabel "MyOrganization_0" ;
.
toop:MyOrganization_1
  rdf:type vcard:Organization ;
  rdfs:comment "" ;
  rdfs:label "MijnOrganization 1_"@nl ;
  skos:prefLabel "My Organization 1" ;
.
toop:MyOrganization_2
  rdf:type vcard:Organization ;
  rdfs:comment "" ;
  rdfs:label "Mijn Organization 2_"@nl ;
  skos:prefLabel "My Organization 2" ;
.
toop:MyRegOrg_1
  rdf:type toop:RegisteredOrganization ;
  toop:companyName "My Own Company (legal name)" ;
  toop:hasCompanyCode toop:CompanyCode_1 ;
  toop:hasRegisteredSite toop:MyMainSite ;
  rdfs:comment "My organization as instance from the toop:RegisteredOrganization Class" ;
  rdfs:label "Mijn reg org klas 1_"@nl ;
  skos:prefLabel "My organization as instance from the toop:RegisteredOrganization Class" ;
.
toop:NACECodeScheme
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "Represents the NACE codes, expressed in a consistent manner in a SKOS Concept Scheme"@en ;
  rdfs:label "NACECodeScheme"@en ;
  rdfs:subClassOf skos:ConceptScheme ;
  skos:prefLabel "NACECodeScheme" ;
.
toop:NL-KvK
  rdf:type dcterms:Agent ;
  rdfs:comment "De Kamer van Koophandel is de autoriteit voor Nederland voor het registreren van ondermeer bedrijven"@nl ;
  rdfs:comment "The Dutch Chamber of Commerce, acting as registration authority for The Netherlands"@en ;
  rdfs:label "NL-Kv k_"@en ;
.
toop:Person
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "A human person that can have a role in the context of a company."@en ;
  rdfs:label "Person"@en ;
  rdfs:subClassOf <http://xmlns.com/foaf/0.1/Person> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onDataRange xsd:date ;
      owl:onProperty toop:birthday ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onDataRange xsd:integer ;
      owl:onProperty toop:age ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onDataRange xsd:string ;
      owl:onProperty toop:familyName ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onDataRange xsd:string ;
      owl:onProperty toop:givenName ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
toop:PhysicalAddress
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "The postal address and/or the visiting address of a physical site of the company."@en ;
  rdfs:label "Physical address"@en ;
  rdfs:subClassOf vcard:Address ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:countryName ;
      owl:someValuesFrom xsd:string ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:locality ;
      owl:someValuesFrom xsd:string ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:postalCode ;
      owl:someValuesFrom xsd:string ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:region ;
      owl:someValuesFrom xsd:string ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:streetAddress ;
      owl:someValuesFrom xsd:string ;
    ] ;
.
toop:RegisteredOrganization
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:resultVariables (
          [
            sp:varName "s" ;
          ]
          [
            sp:varName "o" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "o" ;
              ] ;
            sp:predicate [
                sp:varName "p" ;
              ] ;
            sp:subject [
                sp:varName "s" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:or ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "p" ;
                      ] ;
                    sp:arg2 rdfs:subClassOf ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "p" ;
                      ] ;
                    sp:arg2 rdfs:subPropertyOf ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:or ;
                sp:arg1 [
                    rdf:type sp:and ;
                    sp:arg1 [
                        rdf:type sp:strstarts ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "s" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://example.register.elo/elonia-business-register#" ;
                      ] ;
                    sp:arg2 [
                        rdf:type sp:strstarts ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "o" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://toop.eu/registered-organization#" ;
                      ] ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:and ;
                    sp:arg1 [
                        rdf:type sp:strstarts ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "s" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://toop.eu/registered-organization#" ;
                      ] ;
                    sp:arg2 [
                        rdf:type sp:strstarts ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "o" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://example.register.elo/elonia-business-register#" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment "The TOOP Registered Orginization class represents an organization that has gained legal status by one of the European member states. It is a direct subclass of the rov:RegisteredOrganization class."@en ;
  rdfs:label "Registered organization"@en ;
  rdfs:subClassOf rov:RegisteredOrganization ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty toop:foundationDate ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty toop:legalStatusEffectiveDate ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:CompanyCode ;
      owl:onProperty toop:hasCompanyCode ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:Person ;
      owl:onProperty toop:hasLegalRepresentative ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:RegisteredSite ;
      owl:onProperty toop:hasRegisteredSite ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:SSNumber ;
      owl:onProperty toop:hasSSNumber ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:VATNumber ;
      owl:onProperty toop:hasVATNumber ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Restriction ;
          owl:onProperty skos:inScheme ;
          owl:someValuesFrom toop:CapitalTypeScheme ;
        ] ;
      owl:onProperty toop:hasCapitalType ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Restriction ;
          owl:onProperty skos:inScheme ;
          owl:someValuesFrom toop:CompanyTypeScheme ;
        ] ;
      owl:onProperty toop:hasCompanyType ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Restriction ;
          owl:onProperty skos:inScheme ;
          owl:someValuesFrom toop:LegalStatusScheme ;
        ] ;
      owl:onProperty toop:hasLegalStatus ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Restriction ;
          owl:onProperty skos:inScheme ;
          owl:someValuesFrom toop:NACECodeScheme ;
        ] ;
      owl:onProperty toop:hasNACECode ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:activityDescription ;
      owl:someValuesFrom xsd:string ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:companyName ;
      owl:someValuesFrom xsd:string ;
    ] ;
.
toop:RegisteredSite
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "Represents the main office and/or premise at which the organization is located. Many organizations are spread across multiple sites and many sites will host multiple locations."@en ;
  rdfs:label "Registered site"@en ;
  rdfs:subClassOf org:Site ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:EmailAddress ;
      owl:onProperty toop:hasEmailAddress ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:PhysicalAddress ;
      owl:onProperty toop:hasPhysicalAddress ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty toop:hasContactNumber ;
      owl:someValuesFrom toop:ContactNumber ;
    ] ;
  skos:prefLabel "Registered site" ;
.
toop:RegistrationAuthority
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:subClassOf dcterms:Agent ;
.
toop:RegistrationNumber
  rdf:type rdfs:Class ;
  rdf:type owl:Class ;
  rdfs:comment "The number of the company as recorded on the register. In some jurisdictions, the number on the register may be different from the official company number. This field must be populated in all service requests even when the RegistrationNumber is the same as the CompanyCode"@en ;
  rdfs:label "Registration number"@en ;
  rdfs:subClassOf adms:Identifier ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty toop:registrationDate ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty skos:notation ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass toop:RegistrationAuthority ;
      owl:onProperty toop:hasRegistrationAuthority ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  skos:prefLabel "Registration number" ;
.
toop:SSNumber
  rdf:type rdfs:Class ;
  rdfs:comment "The social security number of the company."@en ;
  rdfs:label "SS number"@en ;
  rdfs:subClassOf adms:Identifier ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty skos:notation ;
    ] ;
  skos:prefLabel "SS number" ;
.
toop:VATNumber
  rdf:type rdfs:Class ;
  rdfs:comment "The value added tax number of the company."@en ;
  rdfs:label "VAT number"@en ;
  rdfs:subClassOf adms:Identifier ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty skos:notation ;
    ] ;
  skos:prefLabel "VAT number" ;
.
toop:activityDescription
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The description of the main activity of the company as free text description recorded on the registry. This tag should be used to give a description of the company activity in the local language. This should be used in conjunction with the CompanyNaceCode."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "activity description"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf dcterms:description ;
  skos:prefLabel "activity description" ;
.
toop:age
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The age of a person."@en ;
  rdfs:domain toop:Person ;
  rdfs:label "age"@en ;
  rdfs:range xsd:integer ;
  rdfs:subPropertyOf <http://xmlns.com/foaf/0.1/age> ;
.
toop:birthday
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The day of birth of a person."@en ;
  rdfs:domain toop:Person ;
  rdfs:label "birthday"@en ;
  rdfs:range xsd:gMonthDay ;
  rdfs:subPropertyOf <http://xmlns.com/foaf/0.1/birthday> ;
.
toop:companyName
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The official current company name as stored in the business register."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "company name"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf rov:legalName ;
.
toop:contactNumberValue
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The actual value of the contact number."@en ;
  rdfs:domain toop:ContactNumber ;
  rdfs:label "contact number value"@en ;
  rdfs:range xsd:integer ;
  rdfs:subPropertyOf vcard:value ;
.
toop:countryName
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The country name associated with the address of the organization."@en ;
  rdfs:domain toop:PhysicalAddress ;
  rdfs:label "country name {en}" ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf vcard:country-name ;
.
toop:emailAddressValue
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The actual value of the email address."@en ;
  rdfs:domain toop:EmailAddress ;
  rdfs:label "email address value"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf vcard:value ;
.
toop:familyName
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The family name of a person."@en ;
  rdfs:domain toop:Person ;
  rdfs:label "family name"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf <http://xmlns.com/foaf/0.1/familyName> ;
.
toop:foundationDate
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The date at which the company started."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "foundation date"@en ;
  rdfs:range xsd:date ;
  rdfs:subPropertyOf dcterms:created ;
.
toop:givenName
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The given name of a person."@en ;
  rdfs:domain toop:Person ;
  rdfs:label "given name"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf <http://xmlns.com/foaf/0.1/givenName> ;
.
toop:hasCapitalType
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The capital type of the company (subscribed, shared, paid-up, ,...) as part of the CapitalTypeScheme."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has capital type"@en ;
  rdfs:range [
      rdf:type owl:Restriction ;
      owl:onProperty skos:inScheme ;
      owl:someValuesFrom toop:CapitalTypeScheme ;
    ] ;
.
toop:hasCompanyCode
  rdf:type owl:ObjectProperty ;
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object toop:RegisteredOrganization ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            sp:object toop:CompanyCode ;
            sp:predicate rdf:type ;
            sp:subject _:b66790 ;
          ]
          [
            sp:object _:b66790 ;
            sp:predicate toop:hasCompanyCode ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "kvknummer" ;
              ] ;
            sp:predicate skos:notation ;
            sp:subject _:b66790 ;
          ]
        ) ;
      sp:where (
          [
            sp:object nhr:MaatschappelijkeActiviteit ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "kvknummer" ;
              ] ;
            sp:predicate nhr:kvkNummer ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object toop:RegisteredOrganization ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            sp:object toop:CompanyCode ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "cc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "cc" ;
              ] ;
            sp:predicate toop:hasCompanyCode ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "kvknummer" ;
              ] ;
            sp:predicate skos:notation ;
            sp:subject [
                sp:varName "cc" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object nhr:MaatschappelijkeActiviteit ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "kvknummer" ;
              ] ;
            sp:predicate nhr:kvkNummer ;
            sp:subject [
                sp:varName "ma" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:uri ;
                sp:arg1 [
                    rdf:type sp:concat ;
                    sp:arg1 "http://toop.eu/registered-organization#" ;
                    sp:arg2 "CompanyCode" ;
                    sp:arg3 [
                        rdf:type sp:replace ;
                        sp:arg1 [
                            rdf:type sp:str ;
                            sp:arg1 [
                                sp:varName "ma" ;
                              ] ;
                          ] ;
                        sp:arg2 "http://example.register.nl/nationaalhandelsregister#" ;
                        sp:arg3 "_" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "cc" ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment "The property of a registered organization of having a main code that is the unique identifier recorded in the registry. This tag should be used to give an identifier of the company in the local language. It should be used in conjunction with the CompanyNaceCode."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has company code"@en ;
  rdfs:range toop:CompanyCode ;
  rdfs:subPropertyOf adms:identifier ;
  skos:prefLabel "has company code" ;
.
toop:hasCompanyType
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The legal type of the company as part of the CompanyTypeScheme."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has company type"@en ;
  rdfs:range [
      rdf:type owl:Restriction ;
      owl:onProperty skos:inScheme ;
      owl:someValuesFrom toop:CompanyTypeScheme ;
    ] ;
  rdfs:subPropertyOf rov:orgType ;
  skos:prefLabel "has company type" ;
.
toop:hasContactNumber
  rdf:type owl:ObjectProperty ;
  rdfs:comment "A pointer to a contact number of the company."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has contact number"@en ;
  rdfs:range toop:ContactNumber ;
  rdfs:subPropertyOf org:siteAddress ;
.
toop:hasEmailAddress
  rdf:type owl:ObjectProperty ;
  rdfs:comment "A pointer to the email address of the company."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has email address"@en ;
  rdfs:range toop:EmailAddress ;
  rdfs:subPropertyOf org:siteAddress ;
.
toop:hasLegalRepresentative
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The pointer to a legal representative of the company."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has legal representative"@en ;
  rdfs:range toop:Person ;
  rdfs:subPropertyOf org:hasMember ;
.
toop:hasLegalStatus
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The legal status of the company (active, ended,...) as part of the LegalStatusScheme."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has legal status"@en ;
  rdfs:range [
      rdf:type owl:Restriction ;
      owl:onProperty skos:inScheme ;
      owl:someValuesFrom toop:LegalStatusScheme ;
    ] ;
  rdfs:subPropertyOf rov:orgStatus ;
  skos:prefLabel "has legal status" ;
.
toop:hasNACECode
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The NACE code of the company as part of the NACECodeScheme."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has NACE code"@en ;
  rdfs:range [
      rdf:type owl:Restriction ;
      owl:onProperty skos:inScheme ;
      owl:someValuesFrom toop:NACECodeScheme ;
    ] ;
  rdfs:subPropertyOf rov:orgActivity ;
  skos:prefLabel "has NACE code" ;
.
toop:hasPhysicalAddress
  rdf:type owl:ObjectProperty ;
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object org:Site ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "adres" ;
              ] ;
            sp:predicate toop:hasPhysicalAddress ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object toop:PhysicalAddress ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "land" ;
              ] ;
            sp:predicate toop:countryName ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "plaats" ;
              ] ;
            sp:predicate toop:locality ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postcode" ;
              ] ;
            sp:predicate toop:postalCode ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "straatadres" ;
              ] ;
            sp:predicate toop:streetAddress ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object nhr:Vestiging ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "bezadres" ;
              ] ;
            sp:predicate nhr:heeftBezoekadres ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "adres" ;
              ] ;
            sp:predicate nhr:heeftVolledigAdres ;
            sp:subject [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "plaats" ;
              ] ;
            sp:predicate nhr:plaats ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postcode" ;
              ] ;
            sp:predicate nhr:postcode ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "huisnummer" ;
              ] ;
            sp:predicate nhr:huisnummer ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "straatnaam" ;
              ] ;
            sp:predicate nhr:straatnaam ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:concat ;
                sp:arg1 [
                    sp:varName "straatnaam" ;
                  ] ;
                sp:arg2 " " ;
                sp:arg3 [
                    rdf:type xsd:string ;
                    sp:arg1 [
                        sp:varName "huisnummer" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "straatadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "type" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "type" ;
                      ] ;
                    sp:arg2 nhr:BinnenlandsAdres ;
                  ] ;
                sp:arg2 "Nederland" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "land" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object org:Site ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "adres" ;
              ] ;
            sp:predicate toop:hasPhysicalAddress ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object toop:PhysicalAddress ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "land" ;
              ] ;
            sp:predicate toop:countryName ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "regio" ;
              ] ;
            sp:predicate toop:region ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "straathuisnummer" ;
              ] ;
            sp:predicate toop:streetAddress ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "woonplaats" ;
              ] ;
            sp:predicate toop:locality ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postcode" ;
              ] ;
            sp:predicate toop:postalCode ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object nhr:Vestiging ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "bezadres" ;
              ] ;
            sp:predicate nhr:heeftBezoekadres ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "adres" ;
              ] ;
            sp:predicate nhr:heeftVolledigAdres ;
            sp:subject [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "land" ;
              ] ;
            sp:predicate nhr:land ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "regio" ;
                    ] ;
                  sp:predicate nhr:regio ;
                  sp:subject [
                      sp:varName "adres" ;
                    ] ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "straathuisnummer" ;
              ] ;
            sp:predicate nhr:straatHuisnummer ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postcodewoonplaats" ;
              ] ;
            sp:predicate nhr:postcodeWoonplaats ;
            sp:subject [
                sp:varName "adres" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:strbefore ;
                sp:arg1 [
                    sp:varName "postcodewoonplaats" ;
                  ] ;
                sp:arg2 " " ;
              ] ;
            sp:variable [
                sp:varName "postcode" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:strafter ;
                sp:arg1 [
                    sp:varName "postcodewoonplaats" ;
                  ] ;
                sp:arg2 " " ;
              ] ;
            sp:variable [
                sp:varName "woonplaats" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:query [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object org:Site ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "volbezadres" ;
              ] ;
            sp:predicate toop:hasPhysicalAddress ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "volpostadres" ;
              ] ;
            sp:predicate toop:hasPhysicalAddress ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object toop:PhysicalAddress ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "volbezadres" ;
              ] ;
          ]
          [
            sp:object toop:PhysicalAddress ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "volpostadres" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object nhr:Vestiging ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "bezadres" ;
              ] ;
            sp:predicate nhr:heeftBezoekadres ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "postadres" ;
              ] ;
            sp:predicate nhr:heeftPostadres ;
            sp:subject [
                sp:varName "vest" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "volbezadres" ;
              ] ;
            sp:predicate nhr:heeftVolledigAdres ;
            sp:subject [
                sp:varName "bezadres" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "volpostadres" ;
              ] ;
            sp:predicate nhr:heeftVolledigAdres ;
            sp:subject [
                sp:varName "postadres" ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment "Represents a pointer to the physical/visiting address of the company."@en ;
  rdfs:domain org:Site ;
  rdfs:label "has physical address"@en ;
  rdfs:range toop:PhysicalAddress ;
  rdfs:subPropertyOf org:siteAddress ;
  skos:prefLabel "has physical address" ;
.
toop:hasRegisteredSite
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Represents a pointer to the registered site of the company."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "has registered site"@en ;
  rdfs:range toop:RegisteredSite ;
  rdfs:subPropertyOf org:hasRegisteredSite ;
  skos:prefLabel "has registered site" ;
.
toop:hasRegistrationAuthority
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The reference to the official register that has registered the company"@en ;
  rdfs:domain toop:RegistrationNumber ;
  rdfs:label "has registration authority"@en ;
  rdfs:range toop:RegistrationAuthority ;
  rdfs:subPropertyOf dcterms:creator ;
  skos:prefLabel "has registration authority" ;
.
toop:hasRegistrationNumber
  rdf:type owl:ObjectProperty ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:range toop:RegistrationNumber ;
  rdfs:subPropertyOf rov:registration ;
.
toop:hasSSNumber
  rdf:type owl:ObjectProperty ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:range toop:SSNumber ;
  rdfs:subPropertyOf adms:identifier ;
.
toop:hasVATNumber
  rdf:type owl:ObjectProperty ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:range toop:VATNumber ;
  rdfs:subPropertyOf adms:identifier ;
.
toop:legalStatusEffectiveDate
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The date at which the current legal status became effective."@en ;
  rdfs:domain toop:RegisteredOrganization ;
  rdfs:label "legal status effective date"@en ;
  rdfs:range xsd:date ;
  rdfs:subPropertyOf dcterms:date ;
  skos:prefLabel "legal status effective date" ;
.
toop:locality
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The locality (e.g. city or town) associated with the address of the organization."@en ;
  rdfs:domain toop:PhysicalAddress ;
  rdfs:label "locality"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf vcard:locality ;
.
toop:postalCode
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The postal code associated with the address of the organization."@en ;
  rdfs:domain toop:PhysicalAddress ;
  rdfs:label "postal code"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf vcard:postal-code ;
.
toop:region
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The region (e.g. state or province) associated with the address of the organization."@en ;
  rdfs:domain toop:PhysicalAddress ;
  rdfs:label "region"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf vcard:region ;
.
toop:registrationDate
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "Represents the date at which the company is registered."@en ;
  rdfs:domain toop:RegistrationNumber ;
  rdfs:label "registration date"@en ;
  rdfs:range xsd:date ;
  rdfs:subPropertyOf dcterms:issued ;
  skos:prefLabel "registration date" ;
.
toop:streetAddress
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "The street address associated with the address of the organization including both streetname and housenumber."@en ;
  rdfs:domain toop:PhysicalAddress ;
  rdfs:label "street address"@en ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf vcard:street-address ;
.
rov:legalName
  rdfs:domain org:FormalOrganization ;
.
